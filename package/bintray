#!/bin/bash
set -e

API_URL=https://api.bintray.com
API_AUTH=-unsg:$bintray_api_key

log() {
  local func=$1
  shift
  echo -e "\nBintray log: [$func]" $@
}

upload_client_deb() {
  local repo=$1
  local package=$2
  local file=$3
  local path=pool/main/k/konstructs-client/$file
  local version=$4
  local arch=amd64

  log $FUNCNAME "Remove version $version of $repo/$package"
  curl -X DELETE $API_AUTH $API_URL/packages/konstructs/$repo/$package/versions/$version

  log $FUNCNAME "Upload version $version of $repo/$package (for jessie, arch:$arch)"
  curl -T $file $API_AUTH "$API_URL/content/konstructs/$repo/$package/$version/$path;deb_distribution=jessie;deb_component=main;deb_architecture=$arch"

  log $FUNCNAME "Publish version $version of $repo/$package"
  curl -X POST $API_AUTH $API_URL/content/konstructs/$repo/$package/$version/publish
}

upload_client() {
  local repo=$1
  local package=$2
  local file=$3
  local version=$4

  if [[ $version == master* ]]; then
    local path=$file
  else
    local path="${file%%.*}-$version-${file#*.}"
  fi

  log $FUNCNAME "Remove version $version of $repo/$package"
  curl -X DELETE $API_AUTH $API_URL/packages/konstructs/$repo/$package/versions/$version

  log $FUNCNAME "Upload version $version of $repo/$package (file:$file)"
  curl -T $file $API_AUTH "$API_URL/content/konstructs/$repo/$package/$version/$path"

  log $FUNCNAME "Publish version $version of $repo/$package"
  curl -X POST $API_AUTH $API_URL/content/konstructs/$repo/$package/$version/publish
}

# Upload master to bintray
if [ "x$TRAVIS_BRANCH" == "xmaster" ] && [ "x$TRAVIS_PULL_REQUEST" == "xfalse" ]; then
  upload_client_deb debian client $(echo *.deb) master-dev
  upload_client windows client $(echo *.zip) master-dev
  upload_client linux client $(echo *.tar.bz2) master-dev
fi

# Upload tagged releases to bintray
if [ $TRAVIS_TAG ]; then
  upload_client_deb debian client $(echo *.deb) $TRAVIS_TAG
  upload_client windows client $(echo *.zip) $TRAVIS_TAG
  upload_client linux client $(echo *.tar.bz2) $TRAVIS_TAG
fi
